% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/ks.benchmark.R
\name{ks.benchmark}
\alias{ks.benchmark}
\title{ks.benchmark}
\usage{
ks.benchmark(
  wd = getwd(),
  search_iters = 2000,
  keras_epochs = 5000,
  keras_threads = floor(parallel::detectCores()/2),
  search_iters_mxnet = 5000,
  cores = detectCores() - 1,
  input_formulas = readRDS("featureselection_formulas_final.RDS"),
  output_file = "benchmark.csv",
  mxnet = F,
  gpu = F,
  algorithms = c("mlp", "mlpML", "svmRadial", "svmLinear", "rf", "C5.0", "rpart",
    "rpart2", "ctree"),
  holdout = T,
  stamp = as.character(as.numeric(Sys.time()))
)
}
\arguments{
\item{wd}{Working directory here `ks.miRNAselector` was also working.}

\item{search_iters}{The number of random hyperparameters tested in the process of model induction.}

\item{keras_epochs}{Number of epochs used in keras-based methods, if keras methods are used. (e.g. "mlpKerasDropout", "mlpKerasDecay")}

\item{search_iters_mxnet}{Number of iterations in mxnet-based neural network creation. Default: 5000}

\item{cores}{Number of cores using in parallel processing.}

\item{output_file}{Out csv file for the benchmark.}

\item{mxnet}{Whether to use mxnet. Default: F}

\item{gpu}{Wheter to use GPU in mxnet and keras processing. Default: F}

\item{algorithms}{Caret methods that will be checked in benchmark processing. By default the logistic regression is always included.}

\item{holdout}{Best set of hyperparameters can be selected using: (1) if TURE - using hold-out validation on test set, (2) if FALSE - using 10-fold cross-validation repeated 5 times.}

\item{stamp}{Character vector or timestamp to make the benchmark unique.}

\item{input_fomulas}{List of formulas as created by `ks.miRNAselector` or `ks.merge_formulas`. Those formulas will be check in benchmark.}

\item{keras_threds}{This package supports training of keras networks in parallel. Here you can set the number of threads used. (e.g. "mlpKerasDropout", "mlpKerasDecay")}
}
\value{
Results of benchmark. Note that benchmark files are also saved in working directory (`wd`).
}
\description{
Second most important function in the package.
Using the formulas selected by `ks.miRNAselector` function, it test derived miRNA sets in a systematic manner using multiple model induction methods.
This function allows to benchmark miRNA sets in context of their potential for diagnostic test creation.
Hidden feature of this package is application of `mxnet`. Note that `mxnet` has to be installed and configured seperatly.
}
